have stub => length: 16400
no stub => length: 1040

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< encoded data >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
         0  1   2~3       4~7  8~n
Request: 0 op  size  checksum  data 
Respond: 1 op  size     value  data(目前看到最大 2 Bytes而已)

##################################
Sync...
req : 08 2400 00000000 07071220555555
    5555555555555555 5555555555555555
    5555555555555555 5555555555
                       
resp: 08 0200 07071220 0000

##################################
    UART_DATE_REG_ADDR = 0x60000078
    UART_DATE_REG2_ADDR = 0x3f400074
##################################
Detecting chip type...

req : 0a 0400 00000000 78000060
resp: 0a 0200 00200600 0000
dec[10, 2, 0, 0, 32, 6, 0, 0, 0]

req : 0a 0400 00000000 7400403f
resp: 0a 0200 00800000 0000
dec[10, 2, 0, 0, 128, 0, 0, 0, 0]

ESP8266

- - - - - - - - - - - - - - - - - - 
req : 0a 0400 00000000 78000060
resp: 0a 0400 00251215 00000000

ESP32
##################################
    # OTP ROM addresses
    ESP_OTP_MAC0    = 0x3ff00050
    ESP_OTP_MAC1    = 0x3ff00054
    ESP_OTP_MAC2    = 0x3ff00058
    ESP_OTP_MAC3    = 0x3ff0005c
##################################

req : 0a 0400 00000000 5c00f03f
                       5800f03f
                       5400f03f
                       5000f03f
resp: 0a 0200 7fcf5c00 0000
dec[10, 2, 0, 127, 207, 92, 0, 0, 0]

      0a 0200 00b00064 0000
dec[10, 2, 0, 0, 176, 0, 100, 0, 0]

      0a 0200 96d30002 0000
dec[10, 2, 0, 150, 211, 0, 2, 0, 0]

      0a 0200 00006bb4 0000
dec[10, 2, 0, 0, 0, 107, 180, 0, 0]

Chip is ESP8266EX
--------------------------------------------

req : 0a 0400 00000000 5c00f03f
                       5800f03f
                       5400f03f
                       5000f03f
                       
resp: 0a 0200 7fcf5c00 0000
dec[10, 2, 0, 127, 207, 92, 0, 0, 0]

      0a 0200 00b00064 0000
dec[10, 2, 0, 0, 176, 0, 100, 0, 0]
      0a 0200 96d30002 0000
dec[10, 2, 0, 150, 211, 0, 2, 0, 0]
      0a 0200 00006bb4 0000
dec[10, 2, 0, 0, 0, 107, 180, 0, 0]

Features: WiFi
---------------------------------------------

#############################
UART_CLKDIV_REG = 0x60000014
#############################

req : 0a 0400 00000000 14000060
resp: 0a 0200 cd010000 0000

dec[10, 2, 0, 205, 1, 0, 0, 0, 0]

Crystal is 26MHz
---------------------------------------------

                                5000f03f
                                5400f03f
                                5c00f03f
resp: 0a 0200 00006bb4 0000
     [10, 2, 0, 0, 0, 107, 180, 0, 0]
      0a 0200 96d30002 0000
     [10, 2, 0, 150, 211, 0, 2, 0, 0]
      0a 0200 7fcf5c00 0000
     [10, 2, 0, 127, 207, 92, 0, 0, 0]

MAC: 5c:cf:7f:d3:96:b4
---------------------------------------------                            

Uploading stub... (block size : 6144=0x1800)
<text>
offset: 1074847744 (0x4010E000) 
1st. block: 6144
2nd. block: 1960

<data>
1st. block: 768


                < text Begin RAM Download Start > 
-------------------------------------------------------------|
         size checksum                                         stub data
-------------------------------------------------------------|
                       totalSize   blocks  blockSize   text_addr
req : 05 1000 00000000 a81f0000  02000000   00180000    00e01040   
dec[5, 16, 0 ,0, 0, 0, 0, 168, 31, 0, 0, 2, 0, 0, 0, 0, 24, 0, 0, 0, 224, 16, 64]      
                    
         size    value                                       |
-------------------------------------------------------------|
resp: 05 0200 7fcf5c00 0000
dec[5, 2, 0, 127, 207, 92, 0, 0, 0] 
-------------------------------------------------------------|



                < RAM Download Data (len=6160) >
-------------------------------------------------------------|
         size checksum                                         stub data
-------------------------------------------------------------|
      
req : 07 1018 f7000000 | 00180000 00000000 00000000 00000000 | a8100040...
   dec[7, 16, 24, 247, 0, 0, 0, 0]                                              |
         size    value                                       |
-------------------------------------------------------------|
resp: 07 0200 34fe1800 | 0000                                |
-------------------------------------------------------------|

               < RAM Download Data (len=1976) >
-------------------------------------------------------------|
         size checksum                                         stub data
-------------------------------------------------------------|
req : 07 b807 c1000000 | a8070000 01000000 00000000 00000000 | 62613572...
                                                             |
         size    value                                       |
------------------------------------------------------------ |
resp: 07 0200 34fe1800 | 0000                                |
-------------------------------------------------------------|


                < data Begin RAM Download Start > 
-------------------------------------------------------------|
         size checksum                                         stub data
-------------------------------------------------------------|
                       dataSize   blocks blockSize
req : 05 1000 00000000 00030000 01000000 00180000     a8acff3f
                                                      text_addr
         size    value                                       |
-------------------------------------------------------------|
resp: 05 0200 34fe1800 0000                                  |
-------------------------------------------------------------|


               < RAM Download Data (len=784) >
-------------------------------------------------------------|
         size checksum                                         stub data
-------------------------------------------------------------|
req : 07 1003 1a000000 | 00030000 00000000 00000000 00000000 | 0881fe3f...
                                                             |
         size    value                                       |
------------------------------------------------------------ |
resp: 07 0200 34fe1800 | 0000                                |
-------------------------------------------------------------|


Running stub...
<entry>
1074847748     (0x4010E004)

               < Finish RAM Download >
-------------------------------------------------------------|
         size checksum                                         stub data
-------------------------------------------------------------|
req : 06 0800 00000000 00000000 04e01040                     |
                                entry addr                   |
         size    value                                       |
------------------------------------------------------------ |
resp: 06 0200 34fe1800 0000




--------------------------------------------------------------
未經請求發送OHAI，代表STUB正在運行
resp: 4f484149                          

Stub running...

-------------------------------------------------------------
Changing baud rate to 921600


req : 0f 0800 00000000 00100e00 00c20100
[15, 8, 0, 0, 0, 0, 0, 0, 16, 14, 0, 0, 194, 1, 0]
resp: 0f 0200 00000000 0000

Configuring flash size...
##########################################
    SPI_REG_BASE    = 0x60000200
    SPI_USR_OFFS    =       0x1c
    SPI_USR1_OFFS   =       0x20
    SPI_USR2_OFFS   =       0x24
    SPI_W0_OFFS     =       0x40
#########################################  

========Read 32-bit memory address========

req : 0a 0400 00000000 1c020060
resp: 0a 0200 44000080 0000
                       
req : 0a 0400 00000000 24020060
resp: 0a 0200 00000070 0000

========Write 32-bit memory address========
                       addr     value    mask     delay
c0 00 09 1000 00000000 20020060 00170000 ffffffff 00000000 c0 
                    value
resp: c0 01 09 0200 00000070 0000 c0

c0 00 09 1000 00000000 1c020060 00000090 ffffffff 00000000 c0
resp: c0 01 09 0200 00000070 0000 c0

c0 00 09 1000 00000000 24020060 9f000070 ffffffff 00000000 c0
resp: c0 01 09 0200 00000070 0000 c0

c0 00 09 1000 00000000 40020060 00000000 ffffffff 00000000 c0
resp: c0 01 09 0200 00000070 0000 c0

c0 00 09 1000 00000000 00020060 00000400 ffffffff 00000000 c0
resp: c0 01 09 0200 00000070 0000 c0

========Read 32-bit memory address========
                       addr
c0 00 0a 0400 00000000 00020060 c0
resp: c0 01 0a 0200 9f200000 0000 c0

c0 00 0a 0400 00000000 40020060 c0
resp: c0 01 0a 0200 e0401600 0000 c0

========Write 32-bit memory address========
                       addr     value    mask     delay
c0 00 09 1000 00000000 1c020060 44000080 ffffffff 00000000 c0
resp: c0 01 09 0200 e0401600 0000 c0

c0 00 09 1000 00000000 24020060 00000070 ffffffff 00000000 c0
resp: c0 01 09 0200 e0401600 0000 c0

Auto-detected Flash size: 4MB


ESP32多了0xb
//0, 00400000, 00010000, 00001000, 00000100, 0000ffff
req : 0b  18  00 00 00 00 00 00 00 00 00 00 00  40 00 00 00 01 00 00  10 00 00 00 01 00 00 ff ff 00 00

[11, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 1, 0, 0, 16, 0, 0, 0, 1, 0, 0, 255, 255, 0, 0]

resp: 0b 0200 00000000 0000 


0x13 md5

-----------------------------------------------------------
Erasing flash (this may take a while)...

req : d0 0000 00000000
resp: d0 0200 00000000 0000

------------------------------------------------------------


or


Write flash....

req : 10 1000 00000000 408e0700 16000000 00400000 00000000
resp: 10 0200 00000000 0000

md5

req : 13 1000 00000000 00000000 408e0700 00000000 00000000
resp: 13 1200 00000000 f37415c0 6626df76 5dcd04d1 f015e8fa 0000

Leaving...
req: 02 1000 00000000 00000000 00000000 00400000 00000000

req: 12 0400 00000000 01000000


